openapi: 3.0.3
info:
  title: Tiny Tasks API
  version: 1.0.0
  description: Minimal task API using only Node.js core modules.

servers:
  - url: http://localhost:3000

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Service is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

  /tasks:
    get:
      summary: List tasks
      responses:
        '200':
          description: Array of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              examples:
                sample:
                  value:
                    - id: 1
                      title: "First Task"
                      completed: false
                    - id: 2
                      title: "Second Task"
                      completed: true
    post:
      summary: Create task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
            examples:
              create:
                value:
                  title: "demo task"
                  due: "2025-12-31"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: Task ID
    get:
      summary: Get task by ID
      responses:
        '200':
          description: The task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
            examples:
              update:
                value:
                  title: "updated"
                  due: "2025-12-31"
                  completed: true
      responses:
        '200':
          description: Updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete task
      responses:
        '204':
          description: Deleted (no content)
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Task:
      type: object
      required: [id, title, completed]
      properties:
        id:
          type: integer
          format: int64
          example: 1754922040132
        title:
          type: string
          example: "demo task"
        due:
          type: string
          description: ISO-like date string (YYYY-MM-DD)
          example: "2025-12-31"
        completed:
          type: boolean
          example: false

    TaskCreate:
      type: object
      required: [title]
      properties:
        title:
          type: string
        due:
          type: string
          description: ISO-like date string (YYYY-MM-DD)

    TaskUpdate:
      type: object
      properties:
        title:
          type: string
        due:
          type: string
          description: ISO-like date string (YYYY-MM-DD)
        completed:
          type: boolean

    Error:
      type: object
      required: [error]
      properties:
        error:
          type: string
          example: "Not Found"
